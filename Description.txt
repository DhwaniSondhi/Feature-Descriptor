Functionalities implemented:
1. Feature detection
	- Used Sobel to created gradient matrix towards x and y axis.
	- Computed Ixx, Iyy and Ixy and further applied gaussian blur of 3x3 matrix.
	- Created a window of 3x3 to add the values Ixx, Iyy and Ixy respectively across the window to create Harris matrix.
	- Computed determinant, trace and corner strength. For trace, added a very small value to avoid division by zero.
		Formula: Corner Strength= determinant/trace
	- Further applied maximum suppression.

2. Local Maximal Suppression
	- Created a window of 3x3 and moved it across the Corner Strength matrix created by the Harrix detection.
	- For each window movement, took the maximum across the window and supressed others.
	- While choosing the maximum also applied the check that the value is greater than threshold.
	- Returned the Matrix with local maximas and further applied adaptive non-maximum supression.
	
3. Adaptive Non-Maximum Suppression
	- Applied the algorithm given in Mops paper to spread the points and matches in the pictures.
	- Calculated the distance between various and kept the value as radius if the point has corner strength smaller than 0.9 of other's point corner strength.
	- Sorted the points with in decreasing order and resized it for the given value.

4. Feature Description:
	- Used Gaussian blur to remove the noise and provide some scale invariance by taking sigma=1.5.
	- Computed magnitude and angles along the matrix. 
	- Created a 16x16 matrix of both above and provided rotation invariance(given below).
	- Created a descriptor for 128 size.
	- Divided 16x16 matrix in 16 4x4 blocks.
	- Created 8sized histogram for each block.
	- Histogram calculated the orientations by adding magnitudes for angle bins 0-45, 45-90, 90-135, 135-180, 180-225 and 225-0.
	- Histogram was further included in 128 sized descriptor.
	- Descriptor was normalized and cliped to provide Contrast invariance listed below.
	
5. Rotation Invariance:
	- Used the concept listed in the SIFT paper given in lecture. 
	- Created 36 bin histogram to get the dominant orientation in 16x16 matrix.
	- Took all the values or orientations 80% to 100% of the highest one to create multiple keypoints with different orientations.
	- Subtracted these oriented creating multiple matrix rotated along the x-axis by subtracting dominant orientation.
	
6. Contrast Invariance:
	- Cliped the descriptor with max value of 0.2 to provide contrast invariance.
	
7. Feature matching
	- Calculated SSD for different combinations of feature descriptor from both images.
	- Set a boundary condition for the SSD < 0.5.
	- Further calculated Ratio Test: SSD(smallest)/SSD(second smallest)
	- Set a boundary for Ratio Test: SSD1/SSD2 < 0.6

8. Scale invariance:
	- Created 3 Difference of Gaussian octaves with s value of 3, sigma 1.5 and k=2^(1/s).
	- Formula: G1(ks)*I - G2(s)*I
	- Found local maxima or minima along 9 neighbors with a scale above, 9 neighbors with a scale below and 8 neighbors of current image.
	- Used Harris detection, local maximal and adaptive non-maximum suppression to get the keypoints.
	- Further applied the descriptor and matching.
	- Given in a different code file.
	
Functions created:

1. adaptive_sus(points,resize):- for Adaptive Non-Maximum Suppression
2. rotateinvariance(mag,angle):- for Rotation Invariance
3. create_matchings(pts_1, pts_2):- to match the features
4. create_mag_angle(inp_img):- to calulated magnitude and angles
5. sift(input_img, points):- or sift implementation(feature descriptor)
6. max_suppression(input_img,threshold):- for local maxima
7. harris_points(input_img,smallval,threshold,resize):- for harris detection
8. image_features(threshold, small_val, adapt_resize, imgName, var):- to start and save images

The scale invariance in given in different file code.

*****************************The Results are given in a different folder for all the given input files*******************************************************